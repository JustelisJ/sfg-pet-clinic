image: alpine:3.7

stages:
  - test
  - build
  - deploy

variables:
  CI_API_REPOSITORY: $CI_REGISTRY_IMAGE/api
  CI_APP_TAG: $CI_COMMIT_REF_SLUG-$CI_PIPELINE_ID
  CI_APP_VERSION: $CI_PIPELINE_ID-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA

.deploy.api.trigger:
  script: &deploy_api_trigger
    - curl -X POST -F token="${CI_JOB_TOKEN}" -F ref=master -F "variables[DEPLOY_API]=${CI_APP_TAG}" -F "variables[RELEASE]=${RELEASE}" "${DEPLOY_TRIGGER_URL}"

test:
  stage: test
  services:
    - mysql:8
  variables:
    TEST_PROFILE: test,ci
    # mysql:8 config
    MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    LC_ALL: C
  image: openjdk:11-jdk-buster
  script:
    - ./gradlew check --info --no-daemon -g /cache/$CI_PROJECT_NAME-gradle
  artifacts:
    expire_in: 30 days
    paths:
      - build/reports
    reports:
      junit:
        - build/test-results/test/TEST-*.xml

api:dockerize:
  stage: build
  image: openjdk:11-jdk
  script:
    - |
      ./gradlew compileJava jib -g /cache/$CI_PROJECT_NAME-gradle \
        -Djib.to.auth.username="gitlab-ci-token" \
        -Djib.to.auth.password="$CI_JOB_TOKEN" \
        -Djib.to.image="${CI_API_REPOSITORY}:${CI_APP_TAG}"

api:deploy:demo:
  stage: deploy
  when: manual
  except:
    refs: [ master ]
  variables:
    RELEASE: demo
  image: centos:8
  script: *deploy_api_trigger
  environment:
    name: api DEMO
    url: https://example.com

api:deploy:demo:auto:
  stage: deploy
  only:
    refs: [ master ]
  variables:
    RELEASE: demo
  image: centos:8
  script: *deploy_api_trigger
  environment:
    name: api DEMO
    url: https://example.com

api:deploy:prod:
  stage: deploy
  when: manual
  only:
    refs: [ master ]
  variables:
    RELEASE: prod
  image: centos:8
  script: *deploy_api_trigger
  environment:
    name: api PROD
    url: https://example.com